{"version":3,"file":"4.09d7a1b23ae5d56d11b2.hot-update.js","sources":["webpack:///pages/channel.js"],"sourcesContent":["import Layout from '../components/Layout'\r\nimport ChannelGrid from '../components/ChannelGrid'\r\n//import PodcastList from '../components/PodcastList';\r\nimport PodcastListWithClick from '../components/PodcastListWithClick'\r\nimport Error from './_error'\r\n\r\nimport PodcastPlayer from '../components/PodcastPlayer'\r\n\r\nexport default class extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      openPodcast:null\r\n    }\r\n  }\r\n\r\n  openPodcast = (event, podcast)=>{\r\n    event.preventDefault()\r\n    console.log(podcast)\r\n    this.setState({\r\n      openPodcast: podcast\r\n    })    \r\n  }\r\n\r\n  closePodcast = (event)=>{\r\n    event.preventDefault()\r\n    this.setState({\r\n      openPodcast: null\r\n    })\r\n  }\r\n  static async getInitialProps({ res, query }){\r\n    let idChannel = query.id\r\n\r\n    try{\r\n      let [reqChannel, reqSeries, reqAudio] = await Promise.all([\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\r\n      ])\r\n\r\n      if( reqChannel.status >= 400){\r\n        res.statusCode = reqChannel.status\r\n        return { channel:null, audioClips:null, series:null, statusCode:404}\r\n      }\r\n      let dataChannel = await reqChannel.json()\r\n      let channel = dataChannel.body.channel\r\n      \r\n      let dataAudios = await reqAudio.json()\r\n      let audioClips = dataAudios.body.audio_clips\r\n\r\n      let dataSeries = await reqSeries.json()\r\n      let series = dataSeries.body.channels\r\n      /*\r\n      let reqChannel = await fetch(`https://api.audioboom.com/channels/${idChannel}`)\r\n      let dataChannel = await reqChannel.json()\r\n      let channel = dataChannel.body.channel\r\n      \r\n      let reqAudio = await fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\r\n      let dataAudios = await reqAudio.json()\r\n      let audioClips = dataAudios.body.audio_clips\r\n\r\n      let reqSeries = await fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\r\n      let dataSeries = await reqSeries.json()\r\n      let series = dataSeries.body.channels\r\n      */\r\n      \r\n      return { channel, audioClips, series, statusCode:200 }\r\n    }catch(e){\r\n      res.statusCode = 503\r\n      return { channel:null, audioClips:null, series:null, statusCode:503 }\r\n    }\r\n  }\r\n  render(){\r\n    const { channel, audioClips, series, statusCode } = this.props\r\n    const { openPodcast } = this.state\r\n\r\n    if( statusCode!== 200){\r\n      return <Error statusCode={statusCode}/>\r\n    }\r\n\r\n    return(\r\n      <Layout title={ channel.title }>\r\n        <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\r\n        \r\n        { openPodcast && \r\n          <div className=\"modal\">\r\n            <PodcastPlayer clip={  openPodcast } onClose={ this.closePodcast }/>\r\n          </div>\r\n        }\r\n        <h1>{ channel.title }</h1>\r\n\r\n        { series.length > 0 &&\r\n          <div>\r\n            <h2>Series</h2>\r\n\r\n            <ChannelGrid channels={ series }/>\r\n\r\n          </div>\r\n        }\r\n\r\n        <h2>Ultimos Podcasts</h2>\r\n        <PodcastListWithClick \r\n          audioClips={ audioClips }\r\n          onClickPodcast={ this.openPodcast }\r\n          />\r\n\r\n        <style jsx>{`\r\n          header {\r\n            color: #fff;\r\n            background: #8756ca;\r\n            padding: 15px;\r\n            text-align: center;\r\n          }\r\n\r\n          .banner {\r\n            width: 100%;\r\n            padding-bottom: 25%;\r\n            background-position: 50% 50%;\r\n            background-size: cover;\r\n            background-color: #aaa;\r\n          }\r\n          h1 {\r\n            font-weight: 600;\r\n            padding: 15px;\r\n          }\r\n          h2 {\r\n            padding: 5px;\r\n            font-size: 0.9em;\r\n            font-weight: 600;\r\n            margin: 0;\r\n            text-align: center;\r\n          }\r\n          .modal {\r\n            position: fixed;\r\n            background: #000;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            z-index: 99999;\r\n          }\r\n      `}</style>\r\n      </Layout>\r\n    )\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// pages/channel.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AAAA;AACA;AADA;AAGA;AApBA;AAEA;AACA;AADA;AAFA;AAKA;AACA;;;AAyDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AApBA;AAAA;AAAA;AA+DA;;;;;;;;;;;;;AAlHA;AACA;;;AAGA;AACA;;;;AADA;AAAA;AAAA;AACA;AAKA;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;AACA;;;;;;;;;;;;;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AA/DA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}